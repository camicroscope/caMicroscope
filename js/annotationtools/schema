var schema = {
    
    "range1": {
          "type": "number",
          "title": "Threshold Grain",
          //"description": "Threshold gain for calling something in the image as nucleus.  Run as default value 1.0", 
          "default": 1.0,
          "minimum": 0.5,
          "exclusiveMinimum": false,
          "maximum": 1.5
          },
     "result1": {
      "type": "number",
      "maxLength": 3,
      "notitle": true,
      "required": true,
      "placeholder": "1.0",
      "readonly": true
    },
    "range2": {
          "type": "number",
          "title": "Expected Roundness/Smoothness",
          //"description": "Threshold gain for calling something in the image as nucleus.  Run as default value 1.0", 
          "default": 8.0,
          "minimum": 0.0,
          "exclusiveMinimum": false,
          "maximum": 10.0
         },
    "result2": {
      "type": "number",
      "maxLength": 3,
      "notitle": true,
      "required": true,
      "placeholder": "8.0",
      "readonly": true
    },
    "range3": {
      "type": "number",
      "title": "Size Lower Threshold",
      //"description": "Threshold gain for calling something in the image as nucleus.  Run as default value 1.0", 
      "default": 3.0,
      "minimum": 1.0,
      "exclusiveMinimum": false,
      "maximum": 30.0
      },
    "result3": {
      "type": "number",
      "maxLength": 3,
      "notitle": true,
      "required": true,
      "placeholder": "3.0",
      "readonly": true
    } 
  }
  
  console.log('Schema: ' + JSON.stringify(schema, null, 4));
  
  var formSchema = {
        'schema': schema,
        'form': [
      
      {
                'type': 'fieldset',
                'legend': 'Nucleus Segmentation Parameters',
        'expendable': true,
                'items': [
                    {
                        "key": "range1",
                        "type": "range",
                        "step": 0.1,
            "onChange": function (evt) {
                            var valueRange1 = jQuery(evt.target).val();
              if(valueRange1) {
                document.getElementById("jsonform-0-elt-result1").value = valueRange1;
              }
                
                        },
            "otherField": {"key": "result1", "inline":true}
                    },
          "result1",
          {
                        "key": "range2",
                        "type": "range",
                        "step": 0.1,
            "onChange": function (evt) {
                            var valueRange2 = jQuery(evt.target).val();
                            //if (valueRange1) alert(valueRange1);
              if(valueRange2) {
                document.getElementById("jsonform-0-elt-result2").value = valueRange2;
              }
                
                        }
                    },
          "result2",
          {
                        "key": "range3",
                        "type": "range",
                        "step": 0.1,
            "onChange": function (evt) {
                            var valueRange3 = jQuery(evt.target).val();
                            //if (valueRange1) alert(valueRange1);
              if(valueRange3) {
                document.getElementById("jsonform-0-elt-result3").value = valueRange3;
              } 
                        }
                    },
          "result3"
                 ]
             }
       
       ],
     "params": {
            "fieldHtmlClass": "input-small"
        }
    }
  
